package com.dpd.common.service.shipmentservice._3_2;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.2.4
 * 2018-10-01T11:06:57.959+02:00
 * Generated source version: 3.2.4
 *
 */
@WebService(targetNamespace = "http://dpd.com/common/service/ShipmentService/3.2", name = "ShipmentService_3_2")
@XmlSeeAlso({com.dpd.common.service.types.shipmentservice._3.ObjectFactory.class, com.dpd.common.ws.authentication.v2_0.types.ObjectFactory.class})
public interface ShipmentService32 {

    /**
     * Stores up to 30 shipments and creates corresponding shipment documents.
     * 
     * Sample request:
     * <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://dpd.com/common/service/types/Authentication/2.0" xmlns:ns1="http://dpd.com/common/service/types/ShipmentService/3.2">
     *    <soapenv:Header>
     *       <ns:authentication>
     *          <delisId><your delisId></delisId>
     *          <authToken><your authToken></authToken>
     *          <messageLanguage>de_DE</messageLanguage>
     *       </ns:authentication>
     *    </soapenv:Header>
     *    <soapenv:Body>
     *       <ns1:storeOrders>
     *          <printOptions>
     *             <printerLanguage>PDF</printerLanguage>
     *             <paperFormat>A4</paperFormat>
     *          </printOptions>
     *          <order>
     *             <generalShipmentData>
     *                 <identificationNumber>77777</identificationNumber>
     *                	<sendingDepot>0163</sendingDepot>
     *                	<product>CL</product>
     *                	<mpsCompleteDelivery>0</mpsCompleteDelivery>
     *                	<sender>
     * 	                  <name1>Abholer1</name1>
     * 	                  <street>Strasse 1</street>
     * 	                  <country>DE</country>
     * 	                  <zipCode>11111</zipCode>
     * 	                  <city>Ort1</city>
     * 	                  <customerNumber>12345679</customerNumber>
     *                	</sender>
     *                	<recipient>
     * 	                  <name1>Test-Empfaenger</name1>
     * 	                  <street>Test-Strasse</street>
     * 	                  <state>BY</state>
     * 	                  <country>DE</country>
     * 	                  <zipCode>63741</zipCode>
     * 	                  <city>Aschaffenburg</city>
     *                	</recipient>
     *             	</generalShipmentData>
     *            		<parcels>
     *               		<parcelLabelNumber></parcelLabelNumber>
     *            		</parcels>
     *            		<productAndServiceData>
     *               		<orderType>consignment</orderType>
     *            		</productAndServiceData>
     *          	</order>
     *       	</ns1:storeOrders>
     *    	</soapenv:Body>
     * 	</soapenv:Envelope>
     */
    @WebMethod(action = "http://dpd.com/common/service/ShipmentService/3.2/storeOrders")
    @RequestWrapper(localName = "storeOrders", targetNamespace = "http://dpd.com/common/service/types/ShipmentService/3.2", className = "com.dpd.common.service.types.shipmentservice._3.StoreOrders")
    @ResponseWrapper(localName = "storeOrdersResponse", targetNamespace = "http://dpd.com/common/service/types/ShipmentService/3.2", className = "com.dpd.common.service.types.shipmentservice._3.StoreOrdersResponse")
    @WebResult(name = "orderResult", targetNamespace = "")
    public com.dpd.common.service.types.shipmentservice._3.StoreOrdersResponseType storeOrders(
        @WebParam(name = "printOptions", targetNamespace = "")
        com.dpd.common.service.types.shipmentservice._3.PrintOptions printOptions,
        @WebParam(name = "order", targetNamespace = "")
        java.util.List<com.dpd.common.service.types.shipmentservice._3.ShipmentServiceData> order,
        @WebParam(name = "authentication", targetNamespace = "http://dpd.com/common/service/types/Authentication/2.0", header = true)
        com.dpd.common.ws.authentication.v2_0.types.Authentication authentication
    ) throws AuthenticationFaultMsg;
}
